package com.puffy.events

class BasicEventListener<Identifier, EventType> : EventStreamListener<Identifier, EventType> {
    private val listeners: MutableMap<Identifier, MutableSet<EventListener<EventType>>> =
        mutableMapOf()

    override fun register(identifier: Identifier, listener: EventListener<EventType>) {
        if (listeners[identifier] == null) {
            listeners[identifier] = mutableSetOf()
        }

        listeners[identifier]?.add(listener)
    }

    override fun unregister(identifier: Identifier, listener: EventListener<EventType>) {
        listeners[identifier]?.remove(listener)
    }

    fun notifyListeners(event: EventType) {
        listeners.forEach { entry ->
            entry.value.forEach { eventListener -> eventListener.onEvent(event) }
        }
    }
}
