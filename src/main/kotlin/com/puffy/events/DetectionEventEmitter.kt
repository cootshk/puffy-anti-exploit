package com.puffy.events

import net.minecraft.server.network.ServerPlayerEntity

data class DetectionInfo(val detectionSourceName: String, val player: ServerPlayerEntity)

object DetectionEventEmitter : EventStream<DetectionInfo> {
    private object DetectionEventListener : EventStreamListener<String, DetectionInfo> {
        private val listeners: MutableMap<String, MutableSet<EventListener<DetectionInfo>>> =
            mutableMapOf()

        override fun register(identifier: String, listener: EventListener<DetectionInfo>) {
            if (listeners[identifier] == null) {
                listeners[identifier] = mutableSetOf()
            }

            listeners[identifier]?.add(listener)
        }

        override fun unregister(identifier: String, listener: EventListener<DetectionInfo>) {
            listeners[identifier]?.remove(listener)
        }

        fun notifyListeners(event: DetectionInfo) {
            listeners.forEach { entry ->
                entry.value.forEach { eventListener -> eventListener.onEvent(event) }
            }
        }
    }

    override fun sendEvent(event: DetectionInfo) {
        DetectionEventListener.notifyListeners(event)
    }

    fun addListener(identifier: String, listener: EventListener<DetectionInfo>) {
        DetectionEventListener.register(identifier, listener)
    }
}
