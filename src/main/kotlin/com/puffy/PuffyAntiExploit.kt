package com.puffy

import com.puffy.events.DetectionEventEmitter
import com.puffy.mitigations.AntiFlyMitigation
import com.puffy.mitigations.AntiKillAuraMitigation
import com.puffy.mitigations.AntiSpeedMitigation
import com.puffy.mitigations.MitigationPlayerEntity
import com.puffy.util.disconnectForExploit
import net.fabricmc.api.ModInitializer
import net.fabricmc.fabric.api.networking.v1.ServerPlayConnectionEvents
import net.fabricmc.fabric.api.networking.v1.ServerPlayConnectionEvents.Join
import org.slf4j.LoggerFactory

object PuffyAntiExploit : ModInitializer {
    private val logger = LoggerFactory.getLogger("puffy-anti-exploit")

    override fun onInitialize() {
        ServerPlayConnectionEvents.JOIN.register(
            Join { handler, _, _ ->
                val mitigationPlayerEntity = handler.player as MitigationPlayerEntity
                mitigationPlayerEntity.addMitigation(AntiFlyMitigation(handler.player))
                mitigationPlayerEntity.addMitigation(AntiSpeedMitigation(handler.player))
                mitigationPlayerEntity.addMitigation(AntiKillAuraMitigation(handler.player))

                logger.info("Initialized ${handler.player.name.string}")
            }
        )

        DetectionEventEmitter.addListener("kick-on-detect") { (source, player) ->
            logger.warn(
                "Player ${player.name.string} has been kicked for sending significant amounts of unusual client activity to the server. (source: $source)"
            )

            player.disconnectForExploit(source)
        }

        logger.info("Puffy Anti Exploit initialized!")
    }
}
