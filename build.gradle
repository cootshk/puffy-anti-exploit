import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.9.23"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "puffy-anti-exploit" {
            sourceSet sourceSets.main
        }
    }

    accessWidenerPath = file("src/main/resources/puffy-anti-exploit.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

tasks.register('updateFabricConfigAction', Copy) {
    group = "fabric"
    description = "Generates a new fabric.mod.json with tokens substituted from the values in gradle.properties"
    inputs.property("version", project.version)

    from layout.projectDirectory.file("src/main/resources/fabric.mod.template.json")
    expand version: project.version
    into layout.projectDirectory.dir("src/main/resources")
    rename { "fabric.mod.json" }
}

tasks.named('processResources') {
    dependsOn(tasks.updateFabricConfigAction)
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

tasks.withType(KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 17
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}